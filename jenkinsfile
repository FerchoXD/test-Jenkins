pipeline {
    agent any
    tools { nodejs "node" }

    parameters {
        string(name: 'container_name', defaultValue: 'app', description: 'Nombre del contenedor de docker')
        string(name: 'image_name', defaultValue: 'app', description: 'Nombre de la imagen de docker')
        string(name: 'tag_name', defaultValue: 'latest', description: 'Tag de la imagen de docker')
        string(name: 'container_port', defaultValue: '3000', description: 'Puerto del contenedor de docker')
    }
    
    stages {
        stage('install') {
            steps {
                // No es necesario obtener el código aquí si estás usando la detección de cambios en Jenkins
                //git branch: 'main', url: 'https://github.com/FerchoXD/test-jenkins.git'
            }
        }

        stage('build') {
            steps {
                script {
                    // Convertir container_name a minúsculas
                    def lowerCaseContainerName = container_name.toLowerCase()
                    // Construir una nueva imagen de Docker
                    sh "docker build -t $lowerCaseContainerName:$tag_name ."
                }
            }
        }

        stage('TurnOnInstance'){
            steps {
                // Detener el contenedor anterior si existe
                sh "docker stop $container_name || true"
                sh "docker rm $container_name || true"
                // Ejecutar un nuevo contenedor con la imagen actualizada
                sh "docker run -d -p $container_port:3000 --name $container_name $image_name:$tag_name"
            }
        }

        stage('npminstall') {
            steps {
                sh "npm install"
            }
        }
    }
}
